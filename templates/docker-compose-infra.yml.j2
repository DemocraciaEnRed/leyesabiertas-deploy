version: '2'

services:
  proxy:
    image: traefik
    command: --api --docker
    networks:
      - front-tier
      - back-tier
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
{% if https_certificate_path is defined and https_key_path is defined %}
      - {{ traefik_config_dir_path }}/traefik.toml:/traefik.toml
      - {{ traefik_config_dir_path }}/cert.crt:/cert.crt
      - {{ traefik_config_dir_path }}/key.key:/key.key
{% endif %}
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - "traefik.enable=false"

  mongo:
    image: mongo:3.2
    container_name: mongo
    networks:
      - back-tier
    volumes:
      - {{ mongodb_volume_dir_path }}:/data/db
    labels:
      - "traefik.enable=false"

  mgob:
    image: stefanprodan/mgob:latest
    networks:
      - back-tier
    volumes:
      - {{ mongodb_backup_config_dir_path }}:/config
      - {{ mongodb_backup_storage_dir_path }}:/storage
      - {{ mongodb_backup_tmp_dir_path }}:/tmp
      - {{ mongodb_backup_data_dir_path }}:/data
    labels:
      - "traefik.enable=true"
      - "traefik.port=8090"
      - "traefik.backend=mgob"
      - "traefik.frontend.entryPoints=http"
      - "traefik.frontend.rule=Host:{{ democracyos_host }};Path:/storage,/status,/version,/backup,/metrics;Method:GET"
      - "traefik.docker.network=back-tier"

{% if DATADOG_API_KEY is defined and DATADOG_HOSTNAME is defined %}
  dd-agent:
    image: datadog/docker-dd-agent:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      - API_KEY={{DATADOG_API_KEY}}
      - DD_HOSTNAME={{DATADOG_HOSTNAME}}
    networks:
      - front-tier
      - back-tier
{% endif %}

  ntpd:
    image: tutum/ntpd
    privileged: true

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
